name: Deploy production

on:
  release:
    types: [published]

jobs:
  deploy:
    name: deploy-prod
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: npm ci
        run: npm ci

      - name: deploy prod
        uses: ./.github/actions/sls-deploy
        with:
          app-namespace: relaybox
          stage: ${{ vars.STAGE }}
          aws-account-id: ${{ vars.AWS_ACCOUNT_ID }}
          node-env: ${{ vars.NODE_ENV }}
          vars: ${{ toJson(vars) }}
          secrets: ${{ toJson(secrets) }}

  publish-docker-image:
    name: publish-docker-image
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: production

    steps:
      - uses: actions/checkout@v4

      - name: Extract Version from Tag
        id: extract-version
        uses: ./.github/actions/extract-version

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Build and push multi-platform image
        id: build-image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64/v8 \
            -t relaybox/auth:${{ steps.extract-version.outputs.version }} \
            -t relaybox/auth:latest \
            --push .

  update-package-version:
    name: update-package-version
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      contents: write
    environment:
      name: production

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Extract Version from Tag
        id: extract-version
        uses: ./.github/actions/extract-version

      - name: Update package version
        run: |
          npm version ${{ steps.extract-version.outputs.version }} --no-git-tag-version

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: update package version [skip ci]'
          commit_author: GitHub Actions <actions@github.com>
          branch: main
